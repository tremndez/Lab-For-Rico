package Control;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import src.GameHandler;
import src.GameMode;
import GUI.CardPanel;
import GUI.CardWindow;

/*
 * This class is designed to control the player interactions with the board. It
 * implements the ActionListener so that when a player clicks a button the
 * actionPerformed method will be called. 
 */
public class CardController implements ActionListener {

	// Instance variables the class will use. They are used to reference other
	// variables.
	private CardWindow _w;
	private CardPanel _p;
	public static boolean playerOne;

	/*
	 * The constructor grabs a CardPanel and CardWindow from another class and
	 * then references them for later use.
	 */
	public CardController(CardPanel p, CardWindow w) {
		_p = p;
		_w = w;
	}

	/*
	 * ACTIVITY 2
	 * 
	 * The actionPerformed method will initialize the CardPanel with a card.
	 * Every button in the CardPanel will use the same ActionListener. It will
	 * then check the CardWindow to see if any cards were claimed when that card
	 * was placed. Then the opponent will get to play. The actionPerformed
	 * method will do nothing if the a card is attempted to be placed in an
	 * already owned card.
	 */
	@Override
	public void actionPerformed(ActionEvent arg0) {
		if (GameMode.Singleplayer) {
			if (GameMode.Dificulty) {
				if (!_p.checkOwned()) {
					_p.initialize(GameHandler.getPlayerCard());
					_w.boardCheck(_p);
					_w.getOpponentPlay(GameHandler.getHardOpponentCard());
				} else {

				}
				
			}

			else {
				if (!_p.checkOwned()) {
					_p.initialize(GameHandler.getPlayerCard());
					_w.boardCheck(_p);
					_w.getOpponentPlay(GameHandler.getOpponentCard());
				} else {

				}
			}
		}
		if (GameMode.Multiplayer)

		{
			System.out.println("bob");
			if (playerOne == true) {
				System.out.println("bobo0");
				if (!_p.checkOwned()) {
					playerOne = false;
					_p.initialize(GameHandler.getPlayerCard());
					_w.boardCheck(_p);

				} else {

				}
			} else {
				if (!_p.checkOwned()) {
					playerOne = true;
					_p.initialize(GameHandler.getOpponentCard());
					_w.boardCheck(_p);

				} else {

				}
			}
		}
		_w.checkGameOver();
	}

}
